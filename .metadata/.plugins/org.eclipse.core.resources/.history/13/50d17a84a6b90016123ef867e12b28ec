import java.util.EmptyStackException;
import java.util.Stack;
import java.util.regex.Pattern;

public class Expression {
	
	// To be overridden
	public boolean canEvaluate() {
		return false;
	}
	// To be overridden
	public double evaluate() {
		return 0;
	}
	
	public static Expression parse(String s) {
		try {
			Stack<Expression> stack = new Stack<>();
			for (char c : s.toCharArray()) {
				if (c >= '0' && c <= '9') {
					stack.push(new Constant(c - 48));
				} else if (c == '+') {
					
				} else if (c == '-') {
					
				} else if (c == '*') {
					
				} else if (c == '/') {
					
				} else if (c == '^') {
					
				} else if (Main.names.containsKey(c + "")) {
					
				} else {
					return null; // parse error
				}
			}
		} catch (EmptyStackException e) {
			return null; // parse error, handled in the laziest way possible
		}
	}
}
