import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class NodeDisplay extends JFrame {
	
	public static class Nodes extends JPanel {
		@Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.setColor(Color.BLACK);
            g.fillRect(200, 200, 200, 200);
		}
	}
	
	private static final long serialVersionUID = 1L;
	
	private JButton button;
	private JLabel label;

	public NodeDisplay(String title) {
		createComponents();
		setSize(600, 600);
		setTitle(title);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		this.addComponentListener(new ComponentListener() {
		    public void componentResized(ComponentEvent event) {
		    	Rectangle r = this.getBounds();
		        Main.print(r.getWidth(), r.getHeight());          
		    }

			@Override
			public void componentHidden(ComponentEvent arg0) {
			}

			@Override
			public void componentMoved(ComponentEvent arg0) {
			}

			@Override
			public void componentShown(ComponentEvent arg0) {
			}
		});
		setVisible(true);
		
	}
	
	private void createComponents() {
		JPanel panel = new Nodes();
		button = new JButton("DO NOT PUSH");
		
		button.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent event) {
				label.setText(label.getText() + "e");
			}
		});
		
		label = new JLabel("push this pls");
		panel.add(button);
		panel.add(label);
		add(panel);
	}
}
